<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Output_PanelV02\TB4000_PanelV02.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Output_PanelV02\TB4000_PanelV02.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 644]: Last Updated: Wed Jul 17 10:50:13 2013
<BR><P>
<H3>Maximum Stack Usage =        320 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CSystemEventHandler &rArr; CHTEvent &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[50]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[50]">NMI_Handler</a><BR>
 <LI><a href="#[51]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[51]">HardFault_Handler</a><BR>
 <LI><a href="#[52]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">MemManage_Handler</a><BR>
 <LI><a href="#[53]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[53]">BusFault_Handler</a><BR>
 <LI><a href="#[54]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[54]">UsageFault_Handler</a><BR>
 <LI><a href="#[55]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[55]">SVC_Handler</a><BR>
 <LI><a href="#[56]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[56]">DebugMon_Handler</a><BR>
 <LI><a href="#[57]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[57]">PendSV_Handler</a><BR>
 <LI><a href="#[6f]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6f]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[6f]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[70]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[53]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[72]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">CDebugOpt1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[a]">CDebugOpt1Start</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[10]">CDebugOpt1Stop</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[11]">CDebugOpt2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[b]">CDebugOpt2Start</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[12]">CDebugOpt2Stop</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[13]">CDebugOpt3PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[c]">CDebugOpt3Start</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[14]">CDebugOpt3Stop</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[15]">CDebugOpt4PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[d]">CDebugOpt4Start</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[16]">CDebugOpt4Stop</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[17]">CDebugPump1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[1a]">CDebugPump1RunNegative</a> from menufunc.o(.text) referenced 8 times from menutbl.o(.data)
 <LI><a href="#[19]">CDebugPump1RunPositive</a> from menufunc.o(.text) referenced 8 times from menutbl.o(.data)
 <LI><a href="#[18]">CDebugPump1SetValue</a> from menufunc.o(.text) referenced 4 times from menutbl.o(.data)
 <LI><a href="#[1b]">CDebugPump2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[1d]">CDebugPump2RunNegative</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[1c]">CDebugPump2RunPositive</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[1e]">CDebugValve1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[1f]">CDebugValve2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[20]">CDebugValve3PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[21]">CDebugValve4PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[26]">CDrawBurninStatus</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2]">CDrawMainPage</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[5]">CDrawNextPage</a> from menufunc.o(.text) referenced 34 times from menutbl.o(.data)
 <LI><a href="#[8]">CDrawPageLevel4</a> from menufunc.o(.text) referenced 58 times from menutbl.o(.data)
 <LI><a href="#[f]">CDrawPrevPage</a> from menufunc.o(.text) referenced 72 times from menutbl.o(.data)
 <LI><a href="#[29]">CDrawPrevPage5</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[4c]">CDrawSelInputPicture</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3]">CDrawSelPicture</a> from menufunc.o(.text) referenced 190 times from menutbl.o(.data)
 <LI><a href="#[4d]">CDrawUnselInputPicture</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[4]">CDrawUnselMenuLevel1</a> from menufunc.o(.text) referenced 14 times from menutbl.o(.data)
 <LI><a href="#[6]">CDrawUnselMenuLevel2</a> from menufunc.o(.text) referenced 20 times from menutbl.o(.data)
 <LI><a href="#[7]">CDrawUnselPicture</a> from menufunc.o(.text) referenced 296 times from menutbl.o(.data)
 <LI><a href="#[4a]">CGetInputBit</a> from menufunc.o(.text) referenced 20 times from menutbl.o(.data)
 <LI><a href="#[9]">CInfoShow</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[4b]">CInputBackSpace</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[0]">CNull</a> from menufunc.o(.text) referenced 1558 times from menutbl.o(.data)
 <LI><a href="#[1]">CNull_u8</a> from menufunc.o(.text) referenced 190 times from menutbl.o(.data)
 <LI><a href="#[4e]">CPopUpInputResult</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[44]">CSettingAcceleration1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[45]">CSettingAcceleration1Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[46]">CSettingAcceleration2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[47]">CSettingAcceleration2Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[48]">CSettingBalancePageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[40]">CSettingDivider1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[41]">CSettingDivider1Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[42]">CSettingDivider2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[43]">CSettingDivider2Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[49]">CSettingMicrometerPageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[34]">CSettingOpt1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[35]">CSettingOpt1ShieldValue</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[36]">CSettingOpt2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[37]">CSettingOpt2ShieldValue</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[38]">CSettingOpt3PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[39]">CSettingOpt3ShieldValue</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3a]">CSettingOpt4PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3b]">CSettingOpt4ShieldValue</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3c]">CSettingPump1PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3d]">CSettingPump1Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3e]">CSettingPump2PageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[3f]">CSettingPump2Value</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[31]">CTestBacklashPageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[25]">CTestBurnInPageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2b]">CTestBurninContinue1</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2d]">CTestBurninContinue2</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[27]">CTestBurninSetVol</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[28]">CTestBurninStatusPageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2c]">CTestBurninStop1</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2e]">CTestBurninStop2</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[2a]">CTestExitBurninStatus</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[32]">CTestLeakagePageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[33]">CTestLeakageStop</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[22]">CTestPump1Reset</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[23]">CTestPump2Reset</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[24]">CTestValve1Reset</a> from menufunc.o(.text) referenced 8 times from menutbl.o(.data)
 <LI><a href="#[2f]">CTestWaterWeighPageStyle</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[30]">CTestWaterWeighSetVol</a> from menufunc.o(.text) referenced 2 times from menutbl.o(.data)
 <LI><a href="#[73]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[56]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6b]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6c]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6d]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6e]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[75]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[51]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[63]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[64]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[65]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[74]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[77]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[52]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[50]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[69]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[79]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[62]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[57]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[78]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[76]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6a]">RTC_IRQHandler</a> from rtc.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4f]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[66]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[67]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[68]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[55]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[58]">SysTick_Handler</a> from systick.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5a]">TIMER0_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5b]">TIMER1_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5c]">TIMER2_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5d]">TIMER3_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5e]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5f]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[60]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[61]">UART3_IRQHandler</a> from uart.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[71]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[54]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[59]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7b]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[7a]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[7b]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[15e]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[7c]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[158]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[15f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[4f]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e8]"></a>SystemInit</STRONG> (Thumb, 550 bytes, Stack size 0 bytes, system_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[7e]"></a>SPIFlashMasterInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPIFlashMasterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[83]"></a>SPIFlash_CheckBusy</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseBulk
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>

<P><STRONG><a name="[84]"></a>SPIFlash_WriteEn</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPIFlash_WriteEn
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseBulk
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>

<P><STRONG><a name="[85]"></a>SPIFlash_WritePage</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WriteEn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CheckBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveTouchPoint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveUISetting
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPointDefault
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashCheck
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSettingDefault
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveCheckSum
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
</UL>

<P><STRONG><a name="[86]"></a>SPIFlash_Read</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveTouchPoint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveUISetting
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPoint
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashCheck
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISetting
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSetting
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSetting
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadCheckSum
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadIndex
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
</UL>

<P><STRONG><a name="[87]"></a>SPIFlash_EraseSector</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPIFlash_EraseSector &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WriteEn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CheckBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPointDefault
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSettingDefault
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveCheckSum
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
</UL>

<P><STRONG><a name="[88]"></a>SPIFlash_EraseBulk</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, spi_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPIFlash_EraseBulk &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WriteEn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CheckBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashCheck
</UL>

<P><STRONG><a name="[89]"></a>SPIFlash_ReadID</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>

<P><STRONG><a name="[8a]"></a>SPIFlash_ReadWP</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, spi_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_ss
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send
</UL>

<P><STRONG><a name="[8c]"></a>Delay2us</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Command
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[8b]"></a>Write_Data</STRONG> (Thumb, 100 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Write_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layers_Progressive
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_SetPixelIndex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Triangle
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Line
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Ellipse
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Circle
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start_address_setting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_block_mode_size_setting
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Position
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryWrite_Position
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Source
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Size
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
</UL>

<P><STRONG><a name="[8d]"></a>Write_Command</STRONG> (Thumb, 100 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layers_Progressive
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_SetPixelIndex
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_XY
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Y
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_X
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_INT2
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Triangle
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Line
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Ellipse
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Circle
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start_address_setting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_block_mode_size_setting
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cursor_Position
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryWrite_Position
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Source
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Size
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_DMA_Busy
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
</UL>

<P><STRONG><a name="[8e]"></a>RA8870_PLL_ini</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = RA8870_PLL_ini &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
</UL>

<P><STRONG><a name="[8f]"></a>Write_Dir</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_clear
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawResultCurve
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPopUpInputResult
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>

<P><STRONG><a name="[90]"></a>Text_Background_Color1</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Text_Background_Color1 &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_clear
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
</UL>

<P><STRONG><a name="[91]"></a>Text_Foreground_Color1</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Text_Foreground_Color1 &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_clear
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawResultCurve
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>

<P><STRONG><a name="[92]"></a>Active_Window</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_clear
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
</UL>

<P><STRONG><a name="[93]"></a>Read_Data</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layers_Progressive
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_XY
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Y
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_X
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_INT2
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_INT
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_DMA_Busy
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
</UL>

<P><STRONG><a name="[94]"></a>Layer1_Visible</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Layer1_Visible &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_VisibleLayer
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
</UL>

<P><STRONG><a name="[95]"></a>Reset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
</UL>

<P><STRONG><a name="[96]"></a>RXLCD_init</STRONG> (Thumb, 372 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RXLCD_init &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[97]"></a>Read_Status</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Read_Status
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy_BTE
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
</UL>

<P><STRONG><a name="[98]"></a>Read_Command</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>

<P><STRONG><a name="[99]"></a>Chk_Busy</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chk_Busy &rArr; Read_Status
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
</UL>

<P><STRONG><a name="[9a]"></a>Chk_Busy_BTE</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chk_Busy_BTE &rArr; Read_Status
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Status
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
</UL>

<P><STRONG><a name="[9b]"></a>Chk_DMA_Busy</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Chk_DMA_Busy &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
</UL>

<P><STRONG><a name="[9c]"></a>Text_Background_Color</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[9d]"></a>Text_Foreground_Color</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[9e]"></a>BTE_Size</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BTE_Size &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
</UL>

<P><STRONG><a name="[9f]"></a>BTE_Source</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
</UL>

<P><STRONG><a name="[a0]"></a>BTE_MovePositive</STRONG> (Thumb, 92 bytes, Stack size 44 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Source
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_Size
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy_BTE
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage5
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
</UL>

<P><STRONG><a name="[a1]"></a>MemoryWrite_Position</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MemoryWrite_Position &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
</UL>

<P><STRONG><a name="[a2]"></a>FontWrite_Position</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FontWrite_Position &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>

<P><STRONG><a name="[a3]"></a>String</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = String &rArr; Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_Busy
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>

<P><STRONG><a name="[a4]"></a>Cursor_Position</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[a5]"></a>Scroll_Window</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
</UL>

<P><STRONG><a name="[a6]"></a>Scroll</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Scroll &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
</UL>

<P><STRONG><a name="[a7]"></a>DMA_block_mode_size_setting</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_block_mode_size_setting &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
</UL>

<P><STRONG><a name="[a8]"></a>DMA_Start_address_setting</STRONG> (Thumb, 64 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_Start_address_setting &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
</UL>

<P><STRONG><a name="[a9]"></a>Draw_Circle</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[aa]"></a>Draw_Ellipse</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[ab]"></a>Draw_Line</STRONG> (Thumb, 162 bytes, Stack size 20 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Draw_Line &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawResultCurve
</UL>

<P><STRONG><a name="[ac]"></a>Draw_Triangle</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>

<P><STRONG><a name="[ad]"></a>displaypicture</STRONG> (Thumb, 154 bytes, Stack size 12 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = displaypicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start_address_setting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_block_mode_size_setting
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryWrite_Position
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_DMA_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLCDFrame
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>

<P><STRONG><a name="[ae]"></a>CutPicture</STRONG> (Thumb, 194 bytes, Stack size 36 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Start_address_setting
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_block_mode_size_setting
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryWrite_Position
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_DMA_Busy
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawMainPage
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_CutPicture
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage5
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel5
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel4
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselInputPicture
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawSelInputPicture
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel2
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel1
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselPicture
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawSelPicture
</UL>

<P><STRONG><a name="[af]"></a>Touch_Status</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Touch_Status &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[b0]"></a>Chk_INT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
</UL>

<P><STRONG><a name="[b1]"></a>Chk_INT2</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>

<P><STRONG><a name="[b2]"></a>ADC_X</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_X &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[b3]"></a>ADC_Y</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Y &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[b4]"></a>ADC_XY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
</UL>

<P><STRONG><a name="[b5]"></a>RXLCD_clear</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Background_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>

<P><STRONG><a name="[b6]"></a>RXLCD_SetPixelIndex</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawResultCurve
</UL>

<P><STRONG><a name="[b7]"></a>RXLCD_CutPicture</STRONG> (Thumb, 38 bytes, Stack size 36 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>

<P><STRONG><a name="[b8]"></a>Layer2_Visible</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Layer2_Visible &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_VisibleLayer
</UL>

<P><STRONG><a name="[b9]"></a>Layers_Progressive</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, rx_lcd_v02.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Command
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Data
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>

<P><STRONG><a name="[ba]"></a>RXLCD_VisibleLayer</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RXLCD_VisibleLayer &rArr; Layer2_Visible &rArr; Read_Data
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
</UL>

<P><STRONG><a name="[bb]"></a>RXLCD_ScrollWindow_Next</STRONG> (Thumb, 166 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RXLCD_ScrollWindow_Next &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel5
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel4
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
</UL>

<P><STRONG><a name="[bc]"></a>RXLCD_ScrollWindow_Prev</STRONG> (Thumb, 178 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RXLCD_ScrollWindow_Prev &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawMainPage
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage5
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
</UL>

<P><STRONG><a name="[bd]"></a>RXLCD_ScrollWindow_Up</STRONG> (Thumb, 166 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RXLCD_ScrollWindow_Up &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>

<P><STRONG><a name="[be]"></a>RXLCD_ScrollWindow_Down</STRONG> (Thumb, 178 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = RXLCD_ScrollWindow_Down &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer2_Visible
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Scroll_Window
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay2us
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHideInputMenu
</UL>

<P><STRONG><a name="[bf]"></a>RXLCD_EditNext</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RXLCD_EditNext &rArr; Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawMainPage
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLCDFrame
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHideInputMenu
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage5
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel5
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel4
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel2
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel1
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselPicture
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawSelPicture
</UL>

<P><STRONG><a name="[c0]"></a>RXLCD_EditCurrent</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RXLCD_EditCurrent &rArr; Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLCDFrame
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStatusPageStyle
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel2
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselMenuLevel1
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawUnselPicture
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawSelPicture
</UL>

<P><STRONG><a name="[c1]"></a>WriteString</STRONG> (Thumb, 144 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2PageStyle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1PageStyle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2PageStyle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1PageStyle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4PageStyle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3PageStyle
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2PageStyle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1PageStyle
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingMicrometerPageStyle
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingBalancePageStyle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration2PageStyle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration1PageStyle
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestLeakagePageStyle
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBacklashPageStyle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStatusPageStyle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurnInPageStyle
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugValve4PageStyle
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugValve3PageStyle
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugValve2PageStyle
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugValve1PageStyle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2PageStyle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1PageStyle
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugOpt4PageStyle
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugOpt3PageStyle
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugOpt2PageStyle
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugOpt1PageStyle
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMonitorOptEvent
</UL>

<P><STRONG><a name="[c2]"></a>WriteString1</STRONG> (Thumb, 128 bytes, Stack size 28 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WriteString1 &rArr; String &rArr; Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;String
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CInputBackSpace
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CGetInputBit
</UL>

<P><STRONG><a name="[c3]"></a>RXLCD_DrawLine</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, rx_lcd_v02.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RXLCD_DrawLine &rArr; Draw_Line &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Line
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2PageStyle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1PageStyle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2PageStyle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1PageStyle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4PageStyle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3PageStyle
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2PageStyle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1PageStyle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurnInPageStyle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2PageStyle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1PageStyle
</UL>

<P><STRONG><a name="[58]"></a>SysTick_Handler</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, systick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>Delay10ms</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawMainPage
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layers_Progressive
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_clear
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reset
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RA8870_PLL_ini
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashMasterInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestExitBurninStatus
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPrevPage
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawNextPage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterWeighTest
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurnIn
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
</UL>

<P><STRONG><a name="[160]"></a>Delay1ms</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, timer.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[eb]"></a>enable_timer</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninSetVol
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[ea]"></a>disable_timer</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[131]"></a>reset_timer</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
</UL>

<P><STRONG><a name="[c4]"></a>init_timer</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[61]"></a>UART3_IRQHandler</STRONG> (Thumb, 192 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART3_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[161]"></a>UARTInit</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[162]"></a>UARTSend</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>spi_init</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashMasterInit
</UL>

<P><STRONG><a name="[163]"></a>spi_hi_speed</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, spi.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>spi_ss</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadWP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadID
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseBulk
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WriteEn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CheckBusy
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashMasterInit
</UL>

<P><STRONG><a name="[81]"></a>spi_send</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadWP
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_ReadID
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseBulk
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WriteEn
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_CheckBusy
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashMasterInit
</UL>

<P><STRONG><a name="[6a]"></a>RTC_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c7]"></a>RTCStart</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTimeDefault
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCInit
</UL>

<P><STRONG><a name="[c6]"></a>RTCInit</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStart
</UL>

<P><STRONG><a name="[cb]"></a>RTCStop</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTimeDefault
</UL>

<P><STRONG><a name="[164]"></a>RTC_CTCReset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>RTCSetTime</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTimeDefault
</UL>

<P><STRONG><a name="[165]"></a>RTCSetAlarm</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>RTCGetTime</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashRTCCheck
</UL>

<P><STRONG><a name="[166]"></a>RTCSetAlarmMask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[ca]"></a>RTCSetTimeDefault</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, rtc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTime
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStop
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCStart
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashRTCCheck
</UL>

<P><STRONG><a name="[ef]"></a>ADC_init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[ce]"></a>ADC_startCnv</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC56_Get
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC45_Get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC5_Get
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC4_Get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC12_Get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC23_Get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_Get
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC01_Get
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Get
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Get
</UL>

<P><STRONG><a name="[d0]"></a>ADC_stopCnv</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC56_Get
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC45_Get
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC5_Get
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC4_Get
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC12_Get
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC23_Get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_Get
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Get
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC01_Get
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Get
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Get
</UL>

<P><STRONG><a name="[cf]"></a>ADC0_getCnv</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Get
</UL>

<P><STRONG><a name="[cd]"></a>ADC0_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[d2]"></a>ADC1_getCnv</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Get
</UL>

<P><STRONG><a name="[d1]"></a>ADC1_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[d4]"></a>ADC01_getCnv</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC01_Get
</UL>

<P><STRONG><a name="[d3]"></a>ADC01_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC01_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[d6]"></a>ADC2_getCnv</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Get
</UL>

<P><STRONG><a name="[d5]"></a>ADC2_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[d8]"></a>ADC3_getCnv</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_Get
</UL>

<P><STRONG><a name="[d7]"></a>ADC3_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC3_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[da]"></a>ADC23_getCnv</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC23_Get
</UL>

<P><STRONG><a name="[d9]"></a>ADC23_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC23_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[dc]"></a>ADC12_getCnv</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC12_Get
</UL>

<P><STRONG><a name="[db]"></a>ADC12_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC12_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[de]"></a>ADC4_getCnv</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC4_Get
</UL>

<P><STRONG><a name="[e0]"></a>ADC5_getCnv</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC5_Get
</UL>

<P><STRONG><a name="[dd]"></a>ADC4_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC4_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[df]"></a>ADC5_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC5_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[e2]"></a>ADC45_getCnv</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC45_Get
</UL>

<P><STRONG><a name="[e1]"></a>ADC45_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ADC45_Get
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC45_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>

<P><STRONG><a name="[e4]"></a>ADC56_getCnv</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, adc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC56_Get
</UL>

<P><STRONG><a name="[e3]"></a>ADC56_Get</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC56_getCnv
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_stopCnv
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_startCnv
</UL>

<P><STRONG><a name="[ec]"></a>GPIOInit</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[e9]"></a>CMainUserInitial</STRONG> (Thumb, 250 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[e5]"></a>CDisplayLogo</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CDisplayLogo &rArr; RXLCD_ScrollWindow_Next &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[e6]"></a>CFlashLCDFrame</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CFlashLCDFrame &rArr; displaypicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[e7]"></a>CDeviceInit</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CDeviceInit &rArr; CFlashStartupCheck &rArr; CFlashPumpCheck &rArr; CFlashLoadPumpSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpInit
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLCDFrame
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDisplayLogo
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMainUserInitial
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_init
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Layer1_Visible
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlashMasterInit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10e]"></a>delay</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[7a]"></a>main</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = main &rArr; CSystemEventHandler &rArr; CHTEvent &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawMainPage
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[f5]"></a>CFlashClearFlashBuff</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, eeprom_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveTouchPoint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveUISetting
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPointDefault
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashCheck
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSettingDefault
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
</UL>

<P><STRONG><a name="[f4]"></a>CFlashClearFlashMoveBuff</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, eeprom_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
</UL>

<P><STRONG><a name="[f3]"></a>CFlashSaveIndex</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashMoveBuff
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveTouchPoint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveUISetting
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPointDefault
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSettingDefault
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
</UL>

<P><STRONG><a name="[f6]"></a>CFlashLoadIndex</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
</UL>

<P><STRONG><a name="[f7]"></a>CFlashGetCell</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveTouchPoint
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveUISetting
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPoint
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISetting
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSetting
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSetting
</UL>

<P><STRONG><a name="[f8]"></a>CFlashLoadCheckSum</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CFlashLoadCheckSum &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[f9]"></a>CFlashSaveCheckSum</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CFlashSaveCheckSum &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[fa]"></a>CFlashLoadPumpSetting</STRONG> (Thumb, 494 bytes, Stack size 16 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFlashLoadPumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashPumpCheck
</UL>

<P><STRONG><a name="[fb]"></a>CFlashLoadPumpSettingDefault</STRONG> (Thumb, 406 bytes, Stack size 16 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFlashLoadPumpSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashPumpCheck
</UL>

<P><STRONG><a name="[fd]"></a>CFlashPumpCheck</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CFlashPumpCheck &rArr; CFlashLoadPumpSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSetting
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[fe]"></a>CFlashLoadOptSetting</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CFlashLoadOptSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashOptCheck
</UL>

<P><STRONG><a name="[ff]"></a>CFlashLoadOptSettingDefault</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CFlashLoadOptSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashOptCheck
</UL>

<P><STRONG><a name="[100]"></a>CFlashOptCheck</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFlashOptCheck &rArr; CFlashLoadOptSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSettingDefault
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadOptSetting
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[101]"></a>CFlashLoadUISetting</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CFlashLoadUISetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashUICheck
</UL>

<P><STRONG><a name="[102]"></a>CFlashLoadUISettingDefault</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CFlashLoadUISettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadDefault
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashUICheck
</UL>

<P><STRONG><a name="[103]"></a>CFlashUICheck</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFlashUICheck &rArr; CFlashLoadUISettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISetting
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[104]"></a>CFlashCheck</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CFlashCheck &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseBulk
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashStartupCheck
</UL>

<P><STRONG><a name="[ee]"></a>CFlashStartupCheck</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CFlashStartupCheck &rArr; CFlashPumpCheck &rArr; CFlashLoadPumpSettingDefault &rArr; CFlashSaveIndex &rArr; SPIFlash_WritePage &rArr; SPIFlash_CheckBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashCheck
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashUICheck
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashOptCheck
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashPumpCheck
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveCheckSum
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[105]"></a>CFlashLoadDefault</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadUISettingDefault
</UL>

<P><STRONG><a name="[106]"></a>CFlashRTCCheck</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCSetTimeDefault
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[107]"></a>CFlashLoadTouchPoint</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashTPCheck
</UL>

<P><STRONG><a name="[108]"></a>CFlashLoadTouchPointDefault</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_EraseSector
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashTPCheck
</UL>

<P><STRONG><a name="[109]"></a>CFlashTPCheck</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPointDefault
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadTouchPoint
</UL>

<P><STRONG><a name="[167]"></a>CEepromClearFlashIDBuff</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, eeprom_flash.o(.text), UNUSED)

<P><STRONG><a name="[10a]"></a>CFlashSaveUISetting</STRONG> (Thumb, 224 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>

<P><STRONG><a name="[10b]"></a>CFlashSaveTouchPoint</STRONG> (Thumb, 350 bytes, Stack size 8 bytes, eeprom_flash.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>

<P><STRONG><a name="[10c]"></a>CFlashSaveOptSetting</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CFlashSaveOptSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4ShieldValue
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3ShieldValue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2ShieldValue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1ShieldValue
</UL>

<P><STRONG><a name="[10d]"></a>CFlashSavePumpSetting</STRONG> (Thumb, 902 bytes, Stack size 16 bytes, eeprom_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFlashSavePumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashGetCell
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveIndex
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashClearFlashBuff
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIFlash_WritePage
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2Value
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1Value
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration2Value
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration1Value
</UL>

<P><STRONG><a name="[168]"></a>CSystemAverageFilter</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, touchpad.o(.text), UNUSED)

<P><STRONG><a name="[169]"></a>CSystemMedianFilter</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, touchpad.o(.text), UNUSED)

<P><STRONG><a name="[10f]"></a>TP_Detect</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, touchpad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TP_Detect
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[110]"></a>TP_ClearBuff</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, touchpad.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTPHandle
</UL>

<P><STRONG><a name="[14c]"></a>TP_IsClickDown</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, touchpad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TP_IsClickDown
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
</UL>

<P><STRONG><a name="[14d]"></a>TP_IsClickUp</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, touchpad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TP_IsClickUp
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
</UL>

<P><STRONG><a name="[f0]"></a>CTPHandle</STRONG> (Thumb, 440 bytes, Stack size 32 bytes, touchpad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CTPHandle &rArr; TP_Detect
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_ClearBuff
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_Detect
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Y
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_X
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Touch_Status
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[112]"></a>PumpSetLowPowerMode</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestExitBurninStatus
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue1
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[111]"></a>PumpSetEnable</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestExitBurninStatus
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue1
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[ed]"></a>PumpInit</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PumpInit
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDeviceInit
</UL>

<P><STRONG><a name="[115]"></a>PumpSetDirection</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[114]"></a>PumpSetStepMode</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[147]"></a>PumpSetValveState</STRONG> (Thumb, 160 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestValve4Reset
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestValve3Reset
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestValve2Reset
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestValve1Reset
</UL>

<P><STRONG><a name="[116]"></a>PumpSetClkLow</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[119]"></a>PumpGetOpticStatus</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, pump.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4ShieldValue
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3ShieldValue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2ShieldValue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1ShieldValue
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
</UL>

<P><STRONG><a name="[113]"></a>PumpNormal</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PumpNormal &rArr; init_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetClkLow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetStepMode
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetDirection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStop
</UL>

<P><STRONG><a name="[117]"></a>PumpStop</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, pump.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
</UL>

<P><STRONG><a name="[118]"></a>PumpDetect</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PumpDetect &rArr; init_timer
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetClkLow
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetStepMode
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetDirection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
</UL>

<P><STRONG><a name="[122]"></a>PumpStartStopSteps</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = PumpStartStopSteps
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
</UL>

<P><STRONG><a name="[11a]"></a>PumpGetMiddleStepIndex</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
</UL>

<P><STRONG><a name="[121]"></a>PumpDetectRun</STRONG> (Thumb, 892 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = PumpDetectRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStartStopSteps
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetect
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterWeighTest
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
</UL>

<P><STRONG><a name="[123]"></a>PumpFreeRun</STRONG> (Thumb, 792 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStartStopSteps
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpNormal
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2RunNegative
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2RunPositive
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1RunNegative
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1RunPositive
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterWeighTest
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpBurnIn
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpOut
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpIn
</UL>

<P><STRONG><a name="[124]"></a>PumpIn</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = PumpIn &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
</UL>

<P><STRONG><a name="[125]"></a>PumpOut</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, pump.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>

<P><STRONG><a name="[126]"></a>PumpReset</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = PumpReset &rArr; PumpIn &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpIn
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestPump2Reset
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestPump1Reset
</UL>

<P><STRONG><a name="[127]"></a>PumpBurnIn</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, pump.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>

<P><STRONG><a name="[128]"></a>Pump1ReloadScheme</STRONG> (Thumb, 1022 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Pump1ReloadScheme &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStartStopSteps
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninSetVol
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
</UL>

<P><STRONG><a name="[129]"></a>Pump2ReloadScheme</STRONG> (Thumb, 1056 bytes, Stack size 24 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = Pump2ReloadScheme &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpStartStopSteps
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninSetVol
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
</UL>

<P><STRONG><a name="[12a]"></a>PumpWaterWeighTest</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, pump.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = PumpWaterWeighTest &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighSetVol
</UL>

<P><STRONG><a name="[12b]"></a>CHTEvent</STRONG> (Thumb, 302 bytes, Stack size 80 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = CHTEvent &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC45_Get
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[136]"></a>CPump2LostEvent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[135]"></a>CPump1LostEvent</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[130]"></a>CFlow2Event</STRONG> (Thumb, 462 bytes, Stack size 24 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CFlow2Event &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_timer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetStepMode
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetDirection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[132]"></a>CFlow1Event</STRONG> (Thumb, 614 bytes, Stack size 24 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CFlow1Event &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_timer
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetStepMode
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetDirection
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[134]"></a>CBurnInEvent</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[133]"></a>CMonitorOptEvent</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CMonitorOptEvent &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSystemEventHandler
</UL>

<P><STRONG><a name="[f2]"></a>CSystemEventHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = CSystemEventHandler &rArr; CHTEvent &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMonitorOptEvent
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CBurnInEvent
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPump1LostEvent
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPump2LostEvent
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>CNull</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1]"></a>CNull_u8</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>CDrawSelPicture</STRONG> (Thumb, 468 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CDrawSelPicture &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>CDrawUnselPicture</STRONG> (Thumb, 414 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawUnselPicture &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>CDrawUnselMenuLevel1</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawUnselMenuLevel1 &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>CDrawUnselMenuLevel2</STRONG> (Thumb, 482 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawUnselMenuLevel2 &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[4c]"></a>CDrawSelInputPicture</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CDrawSelInputPicture &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[4d]"></a>CDrawUnselInputPicture</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawUnselInputPicture &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>CDrawMainPage</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawMainPage &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>CDrawNextPage</STRONG> (Thumb, 704 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CDrawNextPage &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>CDrawPageLevel4</STRONG> (Thumb, 572 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawPageLevel4 &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[137]"></a>CDrawPageLevel5</STRONG> (Thumb, 432 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CDrawPageLevel5 &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawBurninStatus
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawResultCurve
</UL>

<P><STRONG><a name="[f]"></a>CDrawPrevPage</STRONG> (Thumb, 2258 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CDrawPrevPage &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Next
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>CDrawPrevPage5</STRONG> (Thumb, 370 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CDrawPrevPage5 &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Prev
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[138]"></a>CDrawInputMenu</STRONG> (Thumb, 398 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CDrawInputMenu &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
</UL>

<P><STRONG><a name="[139]"></a>CDrawInputMenuMin</STRONG> (Thumb, 504 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CDrawInputMenuMin &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Up
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;displaypicture
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FontWrite_Position
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BTE_MovePositive
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
</UL>

<P><STRONG><a name="[13a]"></a>CHideInputMenu</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CHideInputMenu &rArr; RXLCD_ScrollWindow_Down &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_ScrollWindow_Down
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPopUpInputResult
</UL>

<P><STRONG><a name="[4e]"></a>CPopUpInputResult</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CPopUpInputResult &rArr; CHideInputMenu &rArr; RXLCD_ScrollWindow_Down &rArr; Scroll_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHideInputMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CUIHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[4a]"></a>CGetInputBit</STRONG> (Thumb, 480 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CGetInputBit &rArr; WriteString1 &rArr; String &rArr; Write_Dir &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_VisibleLayer
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[4b]"></a>CInputBackSpace</STRONG> (Thumb, 452 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CInputBackSpace &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString1
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditNext
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_VisibleLayer
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Active_Window
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[13b]"></a>CDrawResultCurve</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, menufunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_SetPixelIndex
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Draw_Line
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Text_Foreground_Color1
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Dir
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel5
</UL>

<P><STRONG><a name="[26]"></a>CDrawBurninStatus</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CDrawBurninStatus &rArr; CDrawPageLevel5 &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawPageLevel5
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[13c]"></a>CDrawButton</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CDrawButton &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2PageStyle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1PageStyle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2PageStyle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1PageStyle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4PageStyle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3PageStyle
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2PageStyle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1PageStyle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration2PageStyle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration1PageStyle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue2
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninContinue1
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStatusPageStyle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurnInPageStyle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2PageStyle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1PageStyle
</UL>

<P><STRONG><a name="[13d]"></a>CDrawIconDone</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CDrawIconDone &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CutPicture
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4ShieldValue
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3ShieldValue
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2ShieldValue
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1ShieldValue
</UL>

<P><STRONG><a name="[142]"></a>Long2Len</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[13e]"></a>CAddDecShift</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CAddDecShift &rArr; _Check_NegLong
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[12f]"></a>CDispFloatAt</STRONG> (Thumb, 58 bytes, Stack size 56 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2PageStyle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1PageStyle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2PageStyle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1PageStyle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4PageStyle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3PageStyle
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2PageStyle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1PageStyle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration2PageStyle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration1PageStyle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStatusPageStyle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurnInPageStyle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2PageStyle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1PageStyle
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>

<P><STRONG><a name="[a]"></a>CDebugOpt1Start</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>CDebugOpt1PageStyle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugOpt1PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>CDebugOpt1Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>CDebugOpt2Start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>CDebugOpt2PageStyle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugOpt2PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>CDebugOpt2Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>CDebugOpt3Start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>CDebugOpt3PageStyle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugOpt3PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>CDebugOpt3Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>CDebugOpt4Start</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>CDebugOpt4PageStyle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugOpt4PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>CDebugOpt4Stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>CDebugPump1PageStyle</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CDebugPump1PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>CDebugPump1RunPositive</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CDebugPump1RunPositive &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>CDebugPump1RunNegative</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CDebugPump1RunNegative &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>CDebugPump1SetValue</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>CDebugPump2PageStyle</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CDebugPump2PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>CDebugPump2RunPositive</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CDebugPump2RunPositive &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>CDebugPump2RunNegative</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CDebugPump2RunNegative &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpFreeRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>CDebugValve1PageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugValve1PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>CDebugValve2PageStyle</STRONG> (Thumb, 312 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugValve2PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>CDebugValve3PageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugValve3PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>CDebugValve4PageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CDebugValve4PageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>CTestPump1Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestPump1Reset &rArr; PumpReset &rArr; PumpIn &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>CTestPump2Reset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestPump2Reset &rArr; PumpReset &rArr; PumpIn &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>CTestValve1Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CTestValve1Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetValveState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[148]"></a>CTestValve2Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menufunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetValveState
</UL>

<P><STRONG><a name="[149]"></a>CTestValve3Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menufunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetValveState
</UL>

<P><STRONG><a name="[14a]"></a>CTestValve4Reset</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, menufunc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetValveState
</UL>

<P><STRONG><a name="[25]"></a>CTestBurnInPageStyle</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestBurnInPageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[28]"></a>CTestBurninStatusPageStyle</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestBurninStatusPageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_EditCurrent
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>CTestBurninSetVol</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = CTestBurninSetVol &rArr; Pump2ReloadScheme &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump2ReloadScheme
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pump1ReloadScheme
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2b]"></a>CTestBurninContinue1</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTestBurninContinue1 &rArr; CDrawButton &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>CTestBurninContinue2</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CTestBurninContinue2 &rArr; CDrawButton &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2c]"></a>CTestBurninStop1</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestBurninStop1 &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2e]"></a>CTestBurninStop2</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestBurninStop2 &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>CTestExitBurninStatus</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CTestExitBurninStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay10ms
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetEnable
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpSetLowPowerMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>CTestWaterWeighPageStyle</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CTestWaterWeighPageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpDetectRun
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>CTestWaterWeighSetVol</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = CTestWaterWeighSetVol &rArr; PumpWaterWeighTest &rArr; PumpFreeRun &rArr; PumpGetMiddleStepIndex &rArr; ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpWaterWeighTest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>CTestBacklashPageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CTestBacklashPageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[32]"></a>CTestLeakagePageStyle</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CTestLeakagePageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[33]"></a>CTestLeakageStop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[44]"></a>CSettingAcceleration1PageStyle</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = CSettingAcceleration1PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[46]"></a>CSettingAcceleration2PageStyle</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = CSettingAcceleration2PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[45]"></a>CSettingAcceleration1Value</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSettingAcceleration1Value &rArr; CFlashSavePumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[47]"></a>CSettingAcceleration2Value</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSettingAcceleration2Value &rArr; CFlashSavePumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[48]"></a>CSettingBalancePageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CSettingBalancePageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[49]"></a>CSettingMicrometerPageStyle</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CSettingMicrometerPageStyle &rArr; WriteString &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[34]"></a>CSettingOpt1PageStyle</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingOpt1PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>CSettingOpt2PageStyle</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingOpt2PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>CSettingOpt3PageStyle</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingOpt3PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>CSettingOpt4PageStyle</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingOpt4PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[35]"></a>CSettingOpt1ShieldValue</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CSettingOpt1ShieldValue &rArr; CDrawIconDone &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>CSettingOpt2ShieldValue</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CSettingOpt2ShieldValue &rArr; CDrawIconDone &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[39]"></a>CSettingOpt3ShieldValue</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CSettingOpt3ShieldValue &rArr; CDrawIconDone &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>CSettingOpt4ShieldValue</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = CSettingOpt4ShieldValue &rArr; CDrawIconDone &rArr; CutPicture &rArr; Active_Window &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSaveOptSetting
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetOpticStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>CSettingPump1PageStyle</STRONG> (Thumb, 406 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingPump1PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>CSettingPump2PageStyle</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingPump2PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3d]"></a>CSettingPump1Value</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSettingPump1Value &rArr; CFlashSavePumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[3f]"></a>CSettingPump2Value</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = CSettingPump2Value &rArr; CFlashSavePumpSetting &rArr; CFlashGetCell &rArr; CFlashLoadIndex &rArr; SPIFlash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[40]"></a>CSettingDivider1PageStyle</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingDivider1PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[42]"></a>CSettingDivider2PageStyle</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = CSettingDivider2PageStyle &rArr; CDispFloatAt &rArr; CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RXLCD_DrawLine
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteString
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawButton
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[41]"></a>CSettingDivider1Value</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = CSettingDivider1Value &rArr; log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[43]"></a>CSettingDivider2Value</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = CSettingDivider2Value &rArr; log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashSavePumpSetting
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawIconDone
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>CInfoShow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, menufunc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> menutbl.o(.data)
</UL>
<P><STRONG><a name="[f1]"></a>CUIHandler</STRONG> (Thumb, 1518 bytes, Stack size 16 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = CUIHandler &rArr; CDrawInputMenuMin &rArr; BTE_MovePositive &rArr; BTE_Source &rArr; Write_Command
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_IsClickUp
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_IsClickDown
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CPopUpInputResult
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenuMin
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDrawInputMenu
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fc]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlashLoadPumpSettingDefault
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTCGetTime
</UL>

<P><STRONG><a name="[16a]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[145]"></a>__aeabi_fmul</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[11d]"></a>__aeabi_dmul</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[11e]"></a>__aeabi_ddiv</STRONG> (Thumb, 226 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[12c]"></a>__aeabi_ui2f</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2PageStyle
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1PageStyle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump2PageStyle
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingPump1PageStyle
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt4PageStyle
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt3PageStyle
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt2PageStyle
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingOpt1PageStyle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration2PageStyle
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingAcceleration1PageStyle
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestWaterWeighPageStyle
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop2
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStop1
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurninStatusPageStyle
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CTestBurnInPageStyle
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump2PageStyle
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDebugPump1PageStyle
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow1Event
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFlow2Event
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[11c]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[120]"></a>__aeabi_d2uiz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dfixui.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[12d]"></a>__aeabi_f2d</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>

<P><STRONG><a name="[12e]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CHTEvent
</UL>

<P><STRONG><a name="[16b]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[143]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[151]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>

<P><STRONG><a name="[16c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[16d]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[150]"></a>_float_epilogue</STRONG> (Thumb, 90 bytes, Stack size 4 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
</UL>

<P><STRONG><a name="[14f]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[14e]"></a>_double_epilogue</STRONG> (Thumb, 172 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[154]"></a>__aeabi_dadd</STRONG> (Thumb, 324 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[156]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[157]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[15b]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[16e]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[16f]"></a>__aeabi_cdcmple</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ceil
</UL>

<P><STRONG><a name="[7d]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[170]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[171]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[172]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[174]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[175]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[176]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[177]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[15c]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log
</UL>

<P><STRONG><a name="[11f]"></a>ceil</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, ceil.o(i.ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ceil &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PumpGetMiddleStepIndex
</UL>

<P><STRONG><a name="[146]"></a>floor</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatFix
</UL>

<P><STRONG><a name="[14b]"></a>log</STRONG> (Thumb, 818 bytes, Stack size 104 bytes, log.o(i.log))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = log &rArr; __kernel_poly &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider2Value
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CSettingDivider1Value
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[c5]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer
</UL>

<P><STRONG><a name="[13f]"></a>_Check_NegLong</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Check_NegLong
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAddDecShift
</UL>

<P><STRONG><a name="[140]"></a>CDispFloatFix</STRONG> (Thumb, 144 bytes, Stack size 48 bytes, menufunc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = CDispFloatFix &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAddDecShift
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Long2Len
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDispFloatAt
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
